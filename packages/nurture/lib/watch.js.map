{"version":3,"sources":["../src/watch.js"],"names":[],"mappings":"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","file":"watch.js","sourcesContent":["// @flow\n/* eslint-disable no-console */\nimport sane from 'sane';\nimport chalk from 'chalk';\nimport ora from 'ora';\nimport { queue } from 'async';\nimport execCommand from './utils/exec';\n\n\nconst check = (bool?: boolean) => (bool ? chalk.green('✓') : chalk.red('✗'));\n\nconst printDefinition = (wd, {\n  change,\n  add,\n  delete: del,\n  command,\n  patterns,\n}: WatchDefinition) => {\n  let warning = '';\n  if (change === false && del === false && add === false) {\n    warning = `\\n${chalk.yellow('WARNING')}: not listening to any triggers`;\n    return;\n  }\n\n  console.log(`\n> Watching ${wd}\n> Patterns: ${patterns.join(', ')}\n> Command: '${command}'\n> Triggers: add ${check(add)} change ${check(change)} delete ${check(del)} ${warning}`);\n};\n\nasync function exec(wd, command, files, appendFiles, config) {\n  if (files.length === 0) {\n    return;\n  }\n\n  let commandToRun;\n  if (appendFiles) {\n    commandToRun = `${command} ${files.join(' ')}`;\n  } else {\n    commandToRun = command;\n  }\n\n  console.log(`\\n> ${chalk.green('Watch triggered at')}: ${wd}\\n> ${commandToRun}`);\n  const options = { shell: true, cwd: wd, env: process.env };\n  await execCommand(commandToRun, options, config);\n}\n\nexport default (watchman: boolean) => {\n  const spinner = ora('Watching for changes');\n  const startSpinner = () => {\n    spinner.start();\n  };\n\n  const taskQueue = queue((fn, cb) => {\n    fn().then(cb).catch((err) => {\n      console.error('Task failed', err);\n      cb();\n    });\n  }, 1);\n  taskQueue.drain = startSpinner;\n\n  const addDefinition = (wd: string, config: PhaseConfig = {}) => ({\n    patterns,\n    command,\n    appendFiles = false,\n    add = true,\n    delete: del = false,\n    change = true,\n  }: WatchDefinition) => {\n    const watchDefinition = {\n      patterns,\n      command,\n      appendFiles,\n      add,\n      delete: del,\n      change,\n    };\n\n    printDefinition(wd, watchDefinition);\n\n    const watcher = sane(wd, { glob: patterns, watchman });\n    const newChanges = new Set();\n\n    const newChange = file => {\n      newChanges.add(file);\n      taskQueue.push(async () => {\n        spinner.stop();\n        const files = Array.from(newChanges);\n        newChanges.clear();\n\n        await exec(wd, command, files, appendFiles, config);\n      });\n    };\n\n    if (change) {\n      watcher.on('change', newChange);\n    }\n    if (add) {\n      watcher.on('add', newChange);\n    }\n    if (del) {\n      watcher.on('delete', newChange);\n    }\n  };\n\n  return {\n    add: addDefinition,\n    start: startSpinner,\n  };\n};\n"]}
{"version":3,"sources":["../src/load-watches.js"],"names":[],"mappings":";;;;;;;+BAQA,aAA6B;AAC3B,UAAM,aAAa,MAAM,yBACrB,QADqB,EAErB,QAAQ,GAAR,EAFqB,EAGrB,CAAC,iBAAD,EAAoB,MAApB,CAHqB,CAAzB;AAKA,UAAM,QAAQ,MAAM,QAAQ,GAAR,CAAY,WAAW,GAAX;AAAA,oCAAe,WAAM,IAAN,EAAc;AAC3D,YAAI;AACF,gBAAM,OAAO,MAAM,GAAG,QAAH,CAAY,IAAZ,CAAnB;AACA,iBAAO,EAAE,IAAI,eAAK,OAAL,CAAa,IAAb,CAAN,EAA0B,MAAM,KAAK,KAAL,CAAW,IAAX,CAAhC,EAAP;AACD,SAHD,CAGE,OAAO,GAAP,EAAY;AACZ,kBAAQ,KAAR,CAAe,mBAAiB,IAAK,GAArC;AACA,gBAAM,GAAN;AACD;AACF,OAR+B;;AAAA;AAAA;AAAA;AAAA,SAAZ,CAApB;AASA,QAAI,MAAM,MAAN,KAAiB,CAArB,EAAwB;AACtB,YAAM,IAAI,KAAJ,CAAU,uBAAV,CAAN;AACD;AACD,WAAO,KAAP;AACD,G;;kBAnBc,W;;;;;AAPf;;;;AACA;;;;AACA;;;;AACA;;;;;;ydAJA;;;AAMA,MAAM,KAAK,iCAAX;;kBAsBe,W","file":"load-watches.js","sourcesContent":["/* eslint-disable no-console */\nimport nativeFS from 'fs';\nimport path from 'path';\nimport pify from 'pify';\nimport findFiles from './utils/find-files';\n\nconst fs = pify(nativeFS);\n\nasync function loadWatches() {\n  const watchFiles = await findFiles(\n      '.watch',\n      process.cwd(),\n      ['**/node_modules', '.git']\n  );\n  const files = await Promise.all(watchFiles.map(async file => {\n    try {\n      const data = await fs.readFile(file);\n      return { wd: path.dirname(file), data: JSON.parse(data) };\n    } catch (err) {\n      console.error(`Failed to read ${file}`);\n      throw err;\n    }\n  }));\n  if (files.length === 0) {\n    throw new Error('found no .watch files');\n  }\n  return files;\n}\nexport default loadWatches;\n"]}